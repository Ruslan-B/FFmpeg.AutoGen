using System;
using System.Runtime.InteropServices;

namespace FFmpeg.AutoGen
{
    public unsafe static partial class ffmpeg
    {
        public static int _WIN32_WINNT = 0x0602;
        // public static  attribute_deprecated = __declspec(deprecated);
        // public static  av_always_inline = __forceinline;
        public const int AV_BUFFER_FLAG_READONLY = 1 << 0;
        public const int AV_BUFFERSINK_FLAG_NO_REQUEST = 2;
        public const int AV_BUFFERSINK_FLAG_PEEK = 1;
        // public static  av_ceil_log2 = av_ceil_log2_c;
        public static int AV_CH_BACK_CENTER = 0x00000100;
        public static int AV_CH_BACK_LEFT = 0x00000010;
        public static int AV_CH_BACK_RIGHT = 0x00000020;
        public static int AV_CH_FRONT_CENTER = 0x00000004;
        public static int AV_CH_FRONT_LEFT = 0x00000001;
        public static int AV_CH_FRONT_LEFT_OF_CENTER = 0x00000040;
        public static int AV_CH_FRONT_RIGHT = 0x00000002;
        public static int AV_CH_FRONT_RIGHT_OF_CENTER = 0x00000080;
        public static int AV_CH_LAYOUT_2_1 = AV_CH_LAYOUT_STEREO | AV_CH_BACK_CENTER;
        public static int AV_CH_LAYOUT_2_2 = AV_CH_LAYOUT_STEREO | AV_CH_SIDE_LEFT;
        public static int AV_CH_LAYOUT_2POINT1 = AV_CH_LAYOUT_STEREO | AV_CH_LOW_FREQUENCY;
        public static int AV_CH_LAYOUT_3POINT1 = AV_CH_LAYOUT_SURROUND | AV_CH_LOW_FREQUENCY;
        public static int AV_CH_LAYOUT_4POINT0 = AV_CH_LAYOUT_SURROUND | AV_CH_BACK_CENTER;
        public static int AV_CH_LAYOUT_4POINT1 = AV_CH_LAYOUT_4POINT0 | AV_CH_LOW_FREQUENCY;
        public static int AV_CH_LAYOUT_5POINT0 = AV_CH_LAYOUT_SURROUND | AV_CH_SIDE_LEFT;
        public static int AV_CH_LAYOUT_5POINT0_BACK = AV_CH_LAYOUT_SURROUND | AV_CH_BACK_LEFT;
        public static int AV_CH_LAYOUT_5POINT1 = AV_CH_LAYOUT_5POINT0 | AV_CH_LOW_FREQUENCY;
        public static int AV_CH_LAYOUT_5POINT1_BACK = AV_CH_LAYOUT_5POINT0_BACK | AV_CH_LOW_FREQUENCY;
        public static int AV_CH_LAYOUT_6POINT0 = AV_CH_LAYOUT_5POINT0 | AV_CH_BACK_CENTER;
        public static int AV_CH_LAYOUT_6POINT0_FRONT = AV_CH_LAYOUT_2_2 | AV_CH_FRONT_LEFT_OF_CENTER;
        public static int AV_CH_LAYOUT_6POINT1 = AV_CH_LAYOUT_5POINT1 | AV_CH_BACK_CENTER;
        public static int AV_CH_LAYOUT_6POINT1_BACK = AV_CH_LAYOUT_5POINT1_BACK | AV_CH_BACK_CENTER;
        public static int AV_CH_LAYOUT_6POINT1_FRONT = AV_CH_LAYOUT_6POINT0_FRONT | AV_CH_LOW_FREQUENCY;
        public static int AV_CH_LAYOUT_7POINT0 = AV_CH_LAYOUT_5POINT0 | AV_CH_BACK_LEFT;
        public static int AV_CH_LAYOUT_7POINT0_FRONT = AV_CH_LAYOUT_5POINT0 | AV_CH_FRONT_LEFT_OF_CENTER;
        public static int AV_CH_LAYOUT_7POINT1 = AV_CH_LAYOUT_5POINT1 | AV_CH_BACK_LEFT;
        public static int AV_CH_LAYOUT_7POINT1_WIDE = AV_CH_LAYOUT_5POINT1 | AV_CH_FRONT_LEFT_OF_CENTER;
        public static int AV_CH_LAYOUT_7POINT1_WIDE_BACK = AV_CH_LAYOUT_5POINT1_BACK | AV_CH_FRONT_LEFT_OF_CENTER;
        // public static  AV_CH_LAYOUT_HEXADECAGONAL = (AV_CH_LAYOUT_OCTAGONAL|AV_CH_WIDE_LEFT|AV_CH_WIDE_RIGHT|AV_CH_TOP_BACK_LEFT|AV_CH_TOP_BACK_RIGHT|AV_CH_TOP_BACK_CENTER|AV_CH_TOP_FRONT_CENTER|AV_CH_TOP_FRONT_LEFT|AV_CH_TOP_FRONT_RIGHT);
        public static int AV_CH_LAYOUT_HEXAGONAL = AV_CH_LAYOUT_5POINT0_BACK | AV_CH_BACK_CENTER;
        public static int AV_CH_LAYOUT_MONO = (AV_CH_FRONT_CENTER);
        public static ulong AV_CH_LAYOUT_NATIVE = 0x8000000000000000;
        public static int AV_CH_LAYOUT_OCTAGONAL = AV_CH_LAYOUT_5POINT0 | AV_CH_BACK_LEFT;
        public static int AV_CH_LAYOUT_QUAD = AV_CH_LAYOUT_STEREO | AV_CH_BACK_LEFT;
        public static int AV_CH_LAYOUT_STEREO = AV_CH_FRONT_LEFT | AV_CH_FRONT_RIGHT;
        public static int AV_CH_LAYOUT_STEREO_DOWNMIX = AV_CH_STEREO_LEFT | AV_CH_STEREO_RIGHT;
        public static int AV_CH_LAYOUT_SURROUND = AV_CH_LAYOUT_STEREO | AV_CH_FRONT_CENTER;
        public static int AV_CH_LOW_FREQUENCY = 0x00000008;
        public static ulong AV_CH_LOW_FREQUENCY_2 = 0x0000000800000000;
        public static int AV_CH_SIDE_LEFT = 0x00000200;
        public static int AV_CH_SIDE_RIGHT = 0x00000400;
        public static int AV_CH_STEREO_LEFT = 0x20000000;
        public static int AV_CH_STEREO_RIGHT = 0x40000000;
        public static ulong AV_CH_SURROUND_DIRECT_LEFT = 0x0000000200000000;
        public static ulong AV_CH_SURROUND_DIRECT_RIGHT = 0x0000000400000000;
        public static int AV_CH_TOP_BACK_CENTER = 0x00010000;
        public static int AV_CH_TOP_BACK_LEFT = 0x00008000;
        public static int AV_CH_TOP_BACK_RIGHT = 0x00020000;
        public static int AV_CH_TOP_CENTER = 0x00000800;
        public static int AV_CH_TOP_FRONT_CENTER = 0x00002000;
        public static int AV_CH_TOP_FRONT_LEFT = 0x00001000;
        public static int AV_CH_TOP_FRONT_RIGHT = 0x00004000;
        public static ulong AV_CH_WIDE_LEFT = 0x0000000080000000;
        public static ulong AV_CH_WIDE_RIGHT = 0x0000000100000000;
        // public static  av_clip = av_clip_c;
        // public static  av_clip_int16 = av_clip_int16_c;
        // public static  av_clip_int8 = av_clip_int8_c;
        // public static  av_clip_intp2 = av_clip_intp2_c;
        // public static  av_clip_uint16 = av_clip_uint16_c;
        // public static  av_clip_uint8 = av_clip_uint8_c;
        // public static  av_clip_uintp2 = av_clip_uintp2_c;
        // public static  av_clip64 = av_clip64_c;
        // public static  av_clipd = av_clipd_c;
        // public static  av_clipf = av_clipf_c;
        // public static  av_clipl_int32 = av_clipl_int32_c;
        public const int AV_CODEC_CAP_AUTO_THREADS = 1 << 15;
        public const int AV_CODEC_CAP_AVOID_PROBING = 1 << 17;
        public const int AV_CODEC_CAP_CHANNEL_CONF = 1 << 10;
        public const int AV_CODEC_CAP_DELAY = 1 << 5;
        public const int AV_CODEC_CAP_DR1 = 1 << 1;
        public const int AV_CODEC_CAP_DRAW_HORIZ_BAND = 1 << 0;
        public const int AV_CODEC_CAP_EXPERIMENTAL = 1 << 9;
        public const int AV_CODEC_CAP_FRAME_THREADS = 1 << 12;
        public const int AV_CODEC_CAP_HWACCEL_VDPAU = 1 << 7;
        public static int AV_CODEC_CAP_INTRA_ONLY = 0x40000000;
        public static long AV_CODEC_CAP_LOSSLESS = 0x80000000;
        public const int AV_CODEC_CAP_PARAM_CHANGE = 1 << 14;
        public const int AV_CODEC_CAP_SLICE_THREADS = 1 << 13;
        public const int AV_CODEC_CAP_SMALL_LAST_FRAME = 1 << 6;
        public const int AV_CODEC_CAP_SUBFRAMES = 1 << 8;
        public const int AV_CODEC_CAP_TRUNCATED = 1 << 3;
        public const int AV_CODEC_CAP_VARIABLE_FRAME_SIZE = 1 << 16;
        public const int AV_CODEC_FLAG_4MV = 1 << 2;
        public const int AV_CODEC_FLAG_AC_PRED = 1 << 24;
        public const int AV_CODEC_FLAG_BITEXACT = 1 << 23;
        public static uint AV_CODEC_FLAG_CLOSED_GOP = 1U << 31;
        public const int AV_CODEC_FLAG_GLOBAL_HEADER = 1 << 22;
        public const int AV_CODEC_FLAG_GRAY = 1 << 13;
        public const int AV_CODEC_FLAG_INTERLACED_DCT = 1 << 18;
        public const int AV_CODEC_FLAG_INTERLACED_ME = 1 << 29;
        public const int AV_CODEC_FLAG_LOOP_FILTER = 1 << 11;
        public const int AV_CODEC_FLAG_LOW_DELAY = 1 << 19;
        public const int AV_CODEC_FLAG_OUTPUT_CORRUPT = 1 << 3;
        public const int AV_CODEC_FLAG_PASS1 = 1 << 9;
        public const int AV_CODEC_FLAG_PASS2 = 1 << 10;
        public const int AV_CODEC_FLAG_PSNR = 1 << 15;
        public const int AV_CODEC_FLAG_QPEL = 1 << 4;
        public const int AV_CODEC_FLAG_QSCALE = 1 << 1;
        public const int AV_CODEC_FLAG_TRUNCATED = 1 << 16;
        public const int AV_CODEC_FLAG_UNALIGNED = 1 << 0;
        public const int AV_CODEC_FLAG2_CHUNKS = 1 << 15;
        public const int AV_CODEC_FLAG2_DROP_FRAME_TIMECODE = 1 << 13;
        public const int AV_CODEC_FLAG2_EXPORT_MVS = 1 << 28;
        public const int AV_CODEC_FLAG2_FAST = 1 << 0;
        public const int AV_CODEC_FLAG2_IGNORE_CROP = 1 << 16;
        public const int AV_CODEC_FLAG2_LOCAL_HEADER = 1 << 3;
        public const int AV_CODEC_FLAG2_NO_OUTPUT = 1 << 2;
        public const int AV_CODEC_FLAG2_RO_FLUSH_NOOP = 1 << 30;
        public const int AV_CODEC_FLAG2_SHOW_ALL = 1 << 22;
        public const int AV_CODEC_FLAG2_SKIP_MANUAL = 1 << 29;
        // public static  AV_CODEC_ID_H265 = AV_CODEC_ID_HEVC;
        // public static  AV_CODEC_ID_IFF_BYTERUN1 = AV_CODEC_ID_IFF_ILBM;
        public const int AV_CODEC_PROP_BITMAP_SUB = 1 << 16;
        public const int AV_CODEC_PROP_INTRA_ONLY = 1 << 0;
        public const int AV_CODEC_PROP_LOSSLESS = 1 << 2;
        public const int AV_CODEC_PROP_LOSSY = 1 << 1;
        public const int AV_CODEC_PROP_REORDER = 1 << 3;
        public const int AV_CODEC_PROP_TEXT_SUB = 1 << 17;
        public static int AV_CPU_FLAG_3DNOW = 0x0004;
        public static int AV_CPU_FLAG_3DNOWEXT = 0x0020;
        public static int AV_CPU_FLAG_AESNI = 0x80000;
        public static int AV_CPU_FLAG_ALTIVEC = 0x0001;
        public const int AV_CPU_FLAG_ARMV5TE = 1 << 0;
        public const int AV_CPU_FLAG_ARMV6 = 1 << 1;
        public const int AV_CPU_FLAG_ARMV6T2 = 1 << 2;
        public const int AV_CPU_FLAG_ARMV8 = 1 << 6;
        public static int AV_CPU_FLAG_ATOM = 0x10000000;
        public static int AV_CPU_FLAG_AVX = 0x4000;
        public static int AV_CPU_FLAG_AVX2 = 0x8000;
        public static int AV_CPU_FLAG_AVXSLOW = 0x8000000;
        public static int AV_CPU_FLAG_BMI1 = 0x20000;
        public static int AV_CPU_FLAG_BMI2 = 0x40000;
        public static int AV_CPU_FLAG_CMOV = 0x1000;
        public static int AV_CPU_FLAG_FMA3 = 0x10000;
        public static int AV_CPU_FLAG_FMA4 = 0x0800;
        public static long AV_CPU_FLAG_FORCE = 0x80000000;
        public static int AV_CPU_FLAG_MMX = 0x0001;
        public static int AV_CPU_FLAG_MMX2 = 0x0002;
        public static int AV_CPU_FLAG_MMXEXT = 0x0002;
        public const int AV_CPU_FLAG_NEON = 1 << 5;
        public static int AV_CPU_FLAG_POWER8 = 0x0004;
        public const int AV_CPU_FLAG_SETEND = 1 << 16;
        public static int AV_CPU_FLAG_SSE = 0x0008;
        public static int AV_CPU_FLAG_SSE2 = 0x0010;
        public static int AV_CPU_FLAG_SSE2SLOW = 0x40000000;
        public static int AV_CPU_FLAG_SSE3 = 0x0040;
        public static int AV_CPU_FLAG_SSE3SLOW = 0x20000000;
        public static int AV_CPU_FLAG_SSE4 = 0x0100;
        public static int AV_CPU_FLAG_SSE42 = 0x0200;
        public static int AV_CPU_FLAG_SSSE3 = 0x0080;
        public static int AV_CPU_FLAG_SSSE3SLOW = 0x4000000;
        public const int AV_CPU_FLAG_VFP = 1 << 3;
        public const int AV_CPU_FLAG_VFP_VM = 1 << 7;
        public const int AV_CPU_FLAG_VFPV3 = 1 << 4;
        public static int AV_CPU_FLAG_VSX = 0x0002;
        public static int AV_CPU_FLAG_XOP = 0x0400;
        public const int AV_DICT_APPEND = 32;
        public const int AV_DICT_DONT_OVERWRITE = 16;
        public const int AV_DICT_DONT_STRDUP_KEY = 4;
        public const int AV_DICT_DONT_STRDUP_VAL = 8;
        public const int AV_DICT_IGNORE_SUFFIX = 2;
        public const int AV_DICT_MATCH_CASE = 1;
        public const int AV_DICT_MULTIKEY = 64;
        public static int AV_DISPOSITION_ATTACHED_PIC = 0x0400;
        public static int AV_DISPOSITION_CAPTIONS = 0x10000;
        public static int AV_DISPOSITION_CLEAN_EFFECTS = 0x0200;
        public static int AV_DISPOSITION_COMMENT = 0x0008;
        public static int AV_DISPOSITION_DEFAULT = 0x0001;
        public static int AV_DISPOSITION_DESCRIPTIONS = 0x20000;
        public static int AV_DISPOSITION_DUB = 0x0002;
        public static int AV_DISPOSITION_FORCED = 0x0040;
        public static int AV_DISPOSITION_HEARING_IMPAIRED = 0x0080;
        public static int AV_DISPOSITION_KARAOKE = 0x0020;
        public static int AV_DISPOSITION_LYRICS = 0x0010;
        public static int AV_DISPOSITION_METADATA = 0x40000;
        public static int AV_DISPOSITION_ORIGINAL = 0x0004;
        public static int AV_DISPOSITION_TIMED_THUMBNAILS = 0x0800;
        public static int AV_DISPOSITION_VISUAL_IMPAIRED = 0x0100;
        public const int AV_EF_AGGRESSIVE = 1 << 18;
        public const int AV_EF_BITSTREAM = 1 << 1;
        public const int AV_EF_BUFFER = 1 << 2;
        public const int AV_EF_CAREFUL = 1 << 16;
        public const int AV_EF_COMPLIANT = 1 << 17;
        public const int AV_EF_CRCCHECK = 1 << 0;
        public const int AV_EF_EXPLODE = 1 << 3;
        public const int AV_EF_IGNORE_ERR = 1 << 15;
        public const int AV_ERROR_MAX_STRING_SIZE = 64;
        // public static  av_extern_inline = inline;
        public const int AV_FOURCC_MAX_STRING_SIZE = 32;
        public const int AV_FRAME_FILENAME_FLAGS_MULTIPLE = 1;
        public const int AV_FRAME_FLAG_CORRUPT = 1 << 0;
        public const int AV_FRAME_FLAG_DISCARD = 1 << 2;
        public const int AV_GET_BUFFER_FLAG_REF = 1 << 0;
        public const int AV_HAVE_BIGENDIAN = 0;
        public const int AV_HAVE_FAST_UNALIGNED = 1;
        public const int AV_HWACCEL_FLAG_ALLOW_HIGH_DEPTH = 1 << 1;
        public const int AV_HWACCEL_FLAG_IGNORE_LEVEL = 1 << 0;
        public const int AV_INPUT_BUFFER_MIN_SIZE = 16384;
        public const int AV_INPUT_BUFFER_PADDING_SIZE = 32;
        public const int AV_LOG_DEBUG = 48;
        public const int AV_LOG_ERROR = 16;
        public const int AV_LOG_FATAL = 8;
        public const int AV_LOG_INFO = 32;
        public static int AV_LOG_MAX_OFFSET = AV_LOG_TRACE - AV_LOG_QUIET;
        public const int AV_LOG_PANIC = 0;
        public const int AV_LOG_PRINT_LEVEL = 2;
        public const int AV_LOG_QUIET = -8;
        public const int AV_LOG_SKIP_REPEATED = 1;
        public const int AV_LOG_TRACE = 56;
        public const int AV_LOG_VERBOSE = 40;
        public const int AV_LOG_WARNING = 24;
        // public static  av_mod_uintp2 = av_mod_uintp2_c;
        // public static  av_noinline = __declspec(noinline);
        // public static  AV_NOPTS_VALUE = ((int64_t)UINT64_C(0x8000000000000000));
        public const int AV_NUM_DATA_POINTERS = 8;
        public const int AV_OPT_ALLOW_NULL = 1 << 2;
        public const int AV_OPT_FLAG_AUDIO_PARAM = 8;
        public const int AV_OPT_FLAG_DECODING_PARAM = 2;
        public const int AV_OPT_FLAG_ENCODING_PARAM = 1;
        public const int AV_OPT_FLAG_EXPORT = 64;
        public const int AV_OPT_FLAG_FILTERING_PARAM = 1 << 16;
        public const int AV_OPT_FLAG_METADATA = 4;
        public const int AV_OPT_FLAG_READONLY = 128;
        public const int AV_OPT_FLAG_SUBTITLE_PARAM = 32;
        public const int AV_OPT_FLAG_VIDEO_PARAM = 16;
        public const int AV_OPT_MULTI_COMPONENT_RANGE = 1 << 12;
        public const int AV_OPT_SEARCH_CHILDREN = 1 << 0;
        public const int AV_OPT_SEARCH_FAKE_OBJ = 1 << 1;
        public static int AV_OPT_SERIALIZE_OPT_FLAGS_EXACT = 0x00000002;
        public static int AV_OPT_SERIALIZE_SKIP_DEFAULTS = 0x00000001;
        // public static  av_parity = av_parity_c;
        public const int AV_PARSER_PTS_NB = 4;
        // public static  AV_PIX_FMT_0BGR32 = AV_PIX_FMT_NE(0BGR, RGB0);
        // public static  AV_PIX_FMT_0RGB32 = AV_PIX_FMT_NE(0RGB, BGR0);
        // public static  AV_PIX_FMT_AYUV64 = AV_PIX_FMT_NE(AYUV64BE, AYUV64LE);
        // public static  AV_PIX_FMT_BAYER_BGGR16 = AV_PIX_FMT_NE(BAYER_BGGR16BE,    BAYER_BGGR16LE);
        // public static  AV_PIX_FMT_BAYER_GBRG16 = AV_PIX_FMT_NE(BAYER_GBRG16BE,    BAYER_GBRG16LE);
        // public static  AV_PIX_FMT_BAYER_GRBG16 = AV_PIX_FMT_NE(BAYER_GRBG16BE,    BAYER_GRBG16LE);
        // public static  AV_PIX_FMT_BAYER_RGGB16 = AV_PIX_FMT_NE(BAYER_RGGB16BE,    BAYER_RGGB16LE);
        // public static  AV_PIX_FMT_BGR32 = AV_PIX_FMT_NE(ABGR, RGBA);
        // public static  AV_PIX_FMT_BGR32_1 = AV_PIX_FMT_NE(BGRA, ARGB);
        // public static  AV_PIX_FMT_BGR444 = AV_PIX_FMT_NE(BGR444BE, BGR444LE);
        // public static  AV_PIX_FMT_BGR48 = AV_PIX_FMT_NE(BGR48BE,  BGR48LE);
        // public static  AV_PIX_FMT_BGR555 = AV_PIX_FMT_NE(BGR555BE, BGR555LE);
        // public static  AV_PIX_FMT_BGR565 = AV_PIX_FMT_NE(BGR565BE, BGR565LE);
        // public static  AV_PIX_FMT_BGRA64 = AV_PIX_FMT_NE(BGRA64BE, BGRA64LE);
        public const int AV_PIX_FMT_FLAG_ALPHA = 1 << 7;
        public const int AV_PIX_FMT_FLAG_BAYER = 1 << 8;
        public const int AV_PIX_FMT_FLAG_BE = 1 << 0;
        public const int AV_PIX_FMT_FLAG_BITSTREAM = 1 << 2;
        public const int AV_PIX_FMT_FLAG_HWACCEL = 1 << 3;
        public const int AV_PIX_FMT_FLAG_PAL = 1 << 1;
        public const int AV_PIX_FMT_FLAG_PLANAR = 1 << 4;
        public const int AV_PIX_FMT_FLAG_PSEUDOPAL = 1 << 6;
        public const int AV_PIX_FMT_FLAG_RGB = 1 << 5;
        // public static  AV_PIX_FMT_GBRAP10 = AV_PIX_FMT_NE(GBRAP10BE,   GBRAP10LE);
        // public static  AV_PIX_FMT_GBRAP12 = AV_PIX_FMT_NE(GBRAP12BE,   GBRAP12LE);
        // public static  AV_PIX_FMT_GBRAP16 = AV_PIX_FMT_NE(GBRAP16BE,   GBRAP16LE);
        // public static  AV_PIX_FMT_GBRP10 = AV_PIX_FMT_NE(GBRP10BE,    GBRP10LE);
        // public static  AV_PIX_FMT_GBRP12 = AV_PIX_FMT_NE(GBRP12BE,    GBRP12LE);
        // public static  AV_PIX_FMT_GBRP14 = AV_PIX_FMT_NE(GBRP14BE,    GBRP14LE);
        // public static  AV_PIX_FMT_GBRP16 = AV_PIX_FMT_NE(GBRP16BE,    GBRP16LE);
        // public static  AV_PIX_FMT_GBRP9 = AV_PIX_FMT_NE(GBRP9BE ,    GBRP9LE);
        // public static  AV_PIX_FMT_GRAY10 = AV_PIX_FMT_NE(GRAY10BE, GRAY10LE);
        // public static  AV_PIX_FMT_GRAY12 = AV_PIX_FMT_NE(GRAY12BE, GRAY12LE);
        // public static  AV_PIX_FMT_GRAY16 = AV_PIX_FMT_NE(GRAY16BE, GRAY16LE);
        // public static  AV_PIX_FMT_NV20 = AV_PIX_FMT_NE(NV20BE,  NV20LE);
        // public static  AV_PIX_FMT_P010 = AV_PIX_FMT_NE(P010BE,  P010LE);
        // public static  AV_PIX_FMT_P016 = AV_PIX_FMT_NE(P016BE,  P016LE);
        // public static  AV_PIX_FMT_RGB32 = AV_PIX_FMT_NE(ARGB, BGRA);
        // public static  AV_PIX_FMT_RGB32_1 = AV_PIX_FMT_NE(RGBA, ABGR);
        // public static  AV_PIX_FMT_RGB444 = AV_PIX_FMT_NE(RGB444BE, RGB444LE);
        // public static  AV_PIX_FMT_RGB48 = AV_PIX_FMT_NE(RGB48BE,  RGB48LE);
        // public static  AV_PIX_FMT_RGB555 = AV_PIX_FMT_NE(RGB555BE, RGB555LE);
        // public static  AV_PIX_FMT_RGB565 = AV_PIX_FMT_NE(RGB565BE, RGB565LE);
        // public static  AV_PIX_FMT_RGBA64 = AV_PIX_FMT_NE(RGBA64BE, RGBA64LE);
        // public static  AV_PIX_FMT_XYZ12 = AV_PIX_FMT_NE(XYZ12BE, XYZ12LE);
        // public static  AV_PIX_FMT_YA16 = AV_PIX_FMT_NE(YA16BE,   YA16LE);
        // public static  AV_PIX_FMT_YUV420P10 = AV_PIX_FMT_NE(YUV420P10BE, YUV420P10LE);
        // public static  AV_PIX_FMT_YUV420P12 = AV_PIX_FMT_NE(YUV420P12BE, YUV420P12LE);
        // public static  AV_PIX_FMT_YUV420P14 = AV_PIX_FMT_NE(YUV420P14BE, YUV420P14LE);
        // public static  AV_PIX_FMT_YUV420P16 = AV_PIX_FMT_NE(YUV420P16BE, YUV420P16LE);
        // public static  AV_PIX_FMT_YUV420P9 = AV_PIX_FMT_NE(YUV420P9BE , YUV420P9LE);
        // public static  AV_PIX_FMT_YUV422P10 = AV_PIX_FMT_NE(YUV422P10BE, YUV422P10LE);
        // public static  AV_PIX_FMT_YUV422P12 = AV_PIX_FMT_NE(YUV422P12BE, YUV422P12LE);
        // public static  AV_PIX_FMT_YUV422P14 = AV_PIX_FMT_NE(YUV422P14BE, YUV422P14LE);
        // public static  AV_PIX_FMT_YUV422P16 = AV_PIX_FMT_NE(YUV422P16BE, YUV422P16LE);
        // public static  AV_PIX_FMT_YUV422P9 = AV_PIX_FMT_NE(YUV422P9BE , YUV422P9LE);
        // public static  AV_PIX_FMT_YUV440P10 = AV_PIX_FMT_NE(YUV440P10BE, YUV440P10LE);
        // public static  AV_PIX_FMT_YUV440P12 = AV_PIX_FMT_NE(YUV440P12BE, YUV440P12LE);
        // public static  AV_PIX_FMT_YUV444P10 = AV_PIX_FMT_NE(YUV444P10BE, YUV444P10LE);
        // public static  AV_PIX_FMT_YUV444P12 = AV_PIX_FMT_NE(YUV444P12BE, YUV444P12LE);
        // public static  AV_PIX_FMT_YUV444P14 = AV_PIX_FMT_NE(YUV444P14BE, YUV444P14LE);
        // public static  AV_PIX_FMT_YUV444P16 = AV_PIX_FMT_NE(YUV444P16BE, YUV444P16LE);
        // public static  AV_PIX_FMT_YUV444P9 = AV_PIX_FMT_NE(YUV444P9BE , YUV444P9LE);
        // public static  AV_PIX_FMT_YUVA420P10 = AV_PIX_FMT_NE(YUVA420P10BE, YUVA420P10LE);
        // public static  AV_PIX_FMT_YUVA420P16 = AV_PIX_FMT_NE(YUVA420P16BE, YUVA420P16LE);
        // public static  AV_PIX_FMT_YUVA420P9 = AV_PIX_FMT_NE(YUVA420P9BE , YUVA420P9LE);
        // public static  AV_PIX_FMT_YUVA422P10 = AV_PIX_FMT_NE(YUVA422P10BE, YUVA422P10LE);
        // public static  AV_PIX_FMT_YUVA422P16 = AV_PIX_FMT_NE(YUVA422P16BE, YUVA422P16LE);
        // public static  AV_PIX_FMT_YUVA422P9 = AV_PIX_FMT_NE(YUVA422P9BE , YUVA422P9LE);
        // public static  AV_PIX_FMT_YUVA444P10 = AV_PIX_FMT_NE(YUVA444P10BE, YUVA444P10LE);
        // public static  AV_PIX_FMT_YUVA444P16 = AV_PIX_FMT_NE(YUVA444P16BE, YUVA444P16LE);
        // public static  AV_PIX_FMT_YUVA444P9 = AV_PIX_FMT_NE(YUVA444P9BE , YUVA444P9LE);
        // public static  AV_PKT_DATA_QUALITY_FACTOR = AV_PKT_DATA_QUALITY_STATS;
        public static int AV_PKT_FLAG_CORRUPT = 0x0002;
        public static int AV_PKT_FLAG_DISCARD = 0x0004;
        public static int AV_PKT_FLAG_KEY = 0x0001;
        // public static  av_popcount = av_popcount_c;
        // public static  av_popcount64 = av_popcount64_c;
        public const int AV_PROGRAM_RUNNING = 1;
        public const int AV_PTS_WRAP_ADD_OFFSET = 1;
        public const int AV_PTS_WRAP_IGNORE = 0;
        public const int AV_PTS_WRAP_SUB_OFFSET = -1;
        // public static  av_sat_add32 = av_sat_add32_c;
        // public static  av_sat_dadd32 = av_sat_dadd32_c;
        public static int AV_SUBTITLE_FLAG_FORCED = 0x00000001;
        public const int AV_TIME_BASE = 1000000;
        // public static  AV_TIME_BASE_Q = (AVRational){1, AV_TIME_BASE};
        public const int AV_TIMECODE_STR_SIZE = 16;
        // public static  av_unused = __attribute__((unused));
        // public static  av_used = __attribute__((used));
        // public static  AVCOL_SPC_YCGCO = AVCOL_SPC_YCOCG;
        // public static  AVERROR_BSF_NOT_FOUND = FFERRTAG(0xF8,'B','S','F');
        // public static  AVERROR_BUFFER_TOO_SMALL = FFERRTAG( 'B','U','F','S');
        // public static  AVERROR_BUG = FFERRTAG( 'B','U','G','!');
        // public static  AVERROR_BUG2 = FFERRTAG( 'B','U','G',' ');
        // public static  AVERROR_DECODER_NOT_FOUND = FFERRTAG(0xF8,'D','E','C');
        // public static  AVERROR_DEMUXER_NOT_FOUND = FFERRTAG(0xF8,'D','E','M');
        // public static  AVERROR_ENCODER_NOT_FOUND = FFERRTAG(0xF8,'E','N','C');
        // public static  AVERROR_EOF = FFERRTAG( 'E','O','F',' ');
        // public static  AVERROR_EXIT = FFERRTAG( 'E','X','I','T');
        public static long AVERROR_EXPERIMENTAL = (0x2bb2afa8);
        // public static  AVERROR_EXTERNAL = FFERRTAG( 'E','X','T',' ');
        // public static  AVERROR_FILTER_NOT_FOUND = FFERRTAG(0xF8,'F','I','L');
        // public static  AVERROR_HTTP_BAD_REQUEST = FFERRTAG(0xF8,'4','0','0');
        // public static  AVERROR_HTTP_FORBIDDEN = FFERRTAG(0xF8,'4','0','3');
        // public static  AVERROR_HTTP_NOT_FOUND = FFERRTAG(0xF8,'4','0','4');
        // public static  AVERROR_HTTP_OTHER_4XX = FFERRTAG(0xF8,'4','X','X');
        // public static  AVERROR_HTTP_SERVER_ERROR = FFERRTAG(0xF8,'5','X','X');
        // public static  AVERROR_HTTP_UNAUTHORIZED = FFERRTAG(0xF8,'4','0','1');
        public static long AVERROR_INPUT_CHANGED = (0x636e6701);
        // public static  AVERROR_INVALIDDATA = FFERRTAG( 'I','N','D','A');
        // public static  AVERROR_MUXER_NOT_FOUND = FFERRTAG(0xF8,'M','U','X');
        // public static  AVERROR_OPTION_NOT_FOUND = FFERRTAG(0xF8,'O','P','T');
        public static long AVERROR_OUTPUT_CHANGED = (0x636e6702);
        // public static  AVERROR_PATCHWELCOME = FFERRTAG( 'P','A','W','E');
        // public static  AVERROR_PROTOCOL_NOT_FOUND = FFERRTAG(0xF8,'P','R','O');
        // public static  AVERROR_STREAM_NOT_FOUND = FFERRTAG(0xF8,'S','T','R');
        // public static  AVERROR_UNKNOWN = FFERRTAG( 'U','N','K','N');
        public const int AVFILTER_CMD_FLAG_FAST = 2;
        public const int AVFILTER_CMD_FLAG_ONE = 1;
        public const int AVFILTER_FLAG_DYNAMIC_INPUTS = 1 << 0;
        public const int AVFILTER_FLAG_DYNAMIC_OUTPUTS = 1 << 1;
        public const int AVFILTER_FLAG_SLICE_THREADS = 1 << 2;
        public static int AVFILTER_FLAG_SUPPORT_TIMELINE = AVFILTER_FLAG_SUPPORT_TIMELINE_GENERIC | AVFILTER_FLAG_SUPPORT_TIMELINE_INTERNAL;
        public const int AVFILTER_FLAG_SUPPORT_TIMELINE_GENERIC = 1 << 16;
        public const int AVFILTER_FLAG_SUPPORT_TIMELINE_INTERNAL = 1 << 17;
        public const int AVFILTER_THREAD_SLICE = 1 << 0;
        public static int AVFMT_ALLOW_FLUSH = 0x10000;
        public const int AVFMT_AVOID_NEG_TS_AUTO = -1;
        public const int AVFMT_AVOID_NEG_TS_MAKE_NON_NEGATIVE = 1;
        public const int AVFMT_AVOID_NEG_TS_MAKE_ZERO = 2;
        public static int AVFMT_EVENT_FLAG_METADATA_UPDATED = 0x0001;
        public static int AVFMT_FLAG_AUTO_BSF = 0x200000;
        public static int AVFMT_FLAG_BITEXACT = 0x0400;
        public static int AVFMT_FLAG_CUSTOM_IO = 0x0080;
        public static int AVFMT_FLAG_DISCARD_CORRUPT = 0x0100;
        public static int AVFMT_FLAG_FAST_SEEK = 0x80000;
        public static int AVFMT_FLAG_FLUSH_PACKETS = 0x0200;
        public static int AVFMT_FLAG_GENPTS = 0x0001;
        public static int AVFMT_FLAG_IGNDTS = 0x0008;
        public static int AVFMT_FLAG_IGNIDX = 0x0002;
        public static int AVFMT_FLAG_KEEP_SIDE_DATA = 0x40000;
        public static int AVFMT_FLAG_MP4A_LATM = 0x8000;
        public static int AVFMT_FLAG_NOBUFFER = 0x0040;
        public static int AVFMT_FLAG_NOFILLIN = 0x0010;
        public static int AVFMT_FLAG_NONBLOCK = 0x0004;
        public static int AVFMT_FLAG_NOPARSE = 0x0020;
        public static int AVFMT_FLAG_PRIV_OPT = 0x20000;
        public static int AVFMT_FLAG_SHORTEST = 0x100000;
        public static int AVFMT_FLAG_SORT_DTS = 0x10000;
        public static int AVFMT_GENERIC_INDEX = 0x0100;
        public static int AVFMT_GLOBALHEADER = 0x0040;
        public static int AVFMT_NEEDNUMBER = 0x0002;
        public static int AVFMT_NO_BYTE_SEEK = 0x8000;
        public static int AVFMT_NOBINSEARCH = 0x2000;
        public static int AVFMT_NODIMENSIONS = 0x0800;
        public static int AVFMT_NOFILE = 0x0001;
        public static int AVFMT_NOGENSEARCH = 0x4000;
        public static int AVFMT_NOSTREAMS = 0x1000;
        public static int AVFMT_NOTIMESTAMPS = 0x0080;
        public static int AVFMT_RAWPICTURE = 0x0020;
        public static int AVFMT_SEEK_TO_PTS = 0x4000000;
        public static int AVFMT_SHOW_IDS = 0x0008;
        public static int AVFMT_TS_DISCONT = 0x0200;
        public static int AVFMT_TS_NEGATIVE = 0x40000;
        public static int AVFMT_TS_NONSTRICT = 0x20000;
        public static int AVFMT_VARIABLE_FPS = 0x0400;
        public static int AVFMTCTX_NOHEADER = 0x0001;
        public static int AVINDEX_DISCARD_FRAME = 0x0002;
        public static int AVINDEX_KEYFRAME = 0x0001;
        public static int AVIO_FLAG_DIRECT = 0x8000;
        public const int AVIO_FLAG_NONBLOCK = 8;
        public const int AVIO_FLAG_READ = 1;
        public static int AVIO_FLAG_READ_WRITE = AVIO_FLAG_READ | AVIO_FLAG_WRITE;
        public const int AVIO_FLAG_WRITE = 2;
        public const int AVIO_SEEKABLE_NORMAL = 1 << 0;
        public const int AVIO_SEEKABLE_TIME = 1 << 1;
        public const int AVPALETTE_COUNT = 256;
        public const int AVPALETTE_SIZE = 1024;
        public const int AVPROBE_PADDING_SIZE = 32;
        public const int AVPROBE_SCORE_EXTENSION = 50;
        public const int AVPROBE_SCORE_MAX = 100;
        public const int AVPROBE_SCORE_MIME = 75;
        public static int AVPROBE_SCORE_RETRY = AVPROBE_SCORE_MAX / 4;
        public static int AVPROBE_SCORE_STREAM_RETRY = AVPROBE_SCORE_MAX / 4;
        public const int AVSEEK_FLAG_ANY = 4;
        public const int AVSEEK_FLAG_BACKWARD = 1;
        public const int AVSEEK_FLAG_BYTE = 2;
        public const int AVSEEK_FLAG_FRAME = 8;
        public static int AVSEEK_FORCE = 0x20000;
        public static int AVSEEK_SIZE = 0x10000;
        public static int AVSTREAM_EVENT_FLAG_METADATA_UPDATED = 0x0001;
        public const int AVSTREAM_INIT_IN_INIT_OUTPUT = 1;
        public const int AVSTREAM_INIT_IN_WRITE_HEADER = 0;
        public static int CODEC_CAP_AUTO_THREADS = AV_CODEC_CAP_AUTO_THREADS;
        public static int CODEC_CAP_CHANNEL_CONF = AV_CODEC_CAP_CHANNEL_CONF;
        public static int CODEC_CAP_DELAY = AV_CODEC_CAP_DELAY;
        public static int CODEC_CAP_DR1 = AV_CODEC_CAP_DR1;
        public static int CODEC_CAP_DRAW_HORIZ_BAND = AV_CODEC_CAP_DRAW_HORIZ_BAND;
        public static int CODEC_CAP_EXPERIMENTAL = AV_CODEC_CAP_EXPERIMENTAL;
        public static int CODEC_CAP_FRAME_THREADS = AV_CODEC_CAP_FRAME_THREADS;
        public static int CODEC_CAP_HWACCEL = 0x0010;
        public static int CODEC_CAP_HWACCEL_VDPAU = AV_CODEC_CAP_HWACCEL_VDPAU;
        public static int CODEC_CAP_INTRA_ONLY = AV_CODEC_CAP_INTRA_ONLY;
        public static long CODEC_CAP_LOSSLESS = AV_CODEC_CAP_LOSSLESS;
        public static int CODEC_CAP_NEG_LINESIZES = 0x0800;
        public static int CODEC_CAP_PARAM_CHANGE = AV_CODEC_CAP_PARAM_CHANGE;
        public static int CODEC_CAP_SLICE_THREADS = AV_CODEC_CAP_SLICE_THREADS;
        public static int CODEC_CAP_SMALL_LAST_FRAME = AV_CODEC_CAP_SMALL_LAST_FRAME;
        public static int CODEC_CAP_SUBFRAMES = AV_CODEC_CAP_SUBFRAMES;
        public static int CODEC_CAP_TRUNCATED = AV_CODEC_CAP_TRUNCATED;
        public static int CODEC_CAP_VARIABLE_FRAME_SIZE = AV_CODEC_CAP_VARIABLE_FRAME_SIZE;
        public static int CODEC_FLAG_4MV = AV_CODEC_FLAG_4MV;
        public static int CODEC_FLAG_AC_PRED = AV_CODEC_FLAG_AC_PRED;
        public static int CODEC_FLAG_BITEXACT = AV_CODEC_FLAG_BITEXACT;
        public static uint CODEC_FLAG_CLOSED_GOP = AV_CODEC_FLAG_CLOSED_GOP;
        public static int CODEC_FLAG_EMU_EDGE = 0x4000;
        public static int CODEC_FLAG_GLOBAL_HEADER = AV_CODEC_FLAG_GLOBAL_HEADER;
        public static int CODEC_FLAG_GMC = 0x0020;
        public static int CODEC_FLAG_GRAY = AV_CODEC_FLAG_GRAY;
        public static int CODEC_FLAG_INPUT_PRESERVED = 0x0100;
        public static int CODEC_FLAG_INTERLACED_DCT = AV_CODEC_FLAG_INTERLACED_DCT;
        public static int CODEC_FLAG_INTERLACED_ME = AV_CODEC_FLAG_INTERLACED_ME;
        public static int CODEC_FLAG_LOOP_FILTER = AV_CODEC_FLAG_LOOP_FILTER;
        public static int CODEC_FLAG_LOW_DELAY = AV_CODEC_FLAG_LOW_DELAY;
        public static int CODEC_FLAG_MV0 = 0x0040;
        public static int CODEC_FLAG_NORMALIZE_AQP = 0x00020000;
        public static int CODEC_FLAG_OUTPUT_CORRUPT = AV_CODEC_FLAG_OUTPUT_CORRUPT;
        public static int CODEC_FLAG_PASS1 = AV_CODEC_FLAG_PASS1;
        public static int CODEC_FLAG_PASS2 = AV_CODEC_FLAG_PASS2;
        public static int CODEC_FLAG_PSNR = AV_CODEC_FLAG_PSNR;
        public static int CODEC_FLAG_QPEL = AV_CODEC_FLAG_QPEL;
        public static int CODEC_FLAG_QSCALE = AV_CODEC_FLAG_QSCALE;
        public static int CODEC_FLAG_TRUNCATED = AV_CODEC_FLAG_TRUNCATED;
        public static int CODEC_FLAG_UNALIGNED = AV_CODEC_FLAG_UNALIGNED;
        public static int CODEC_FLAG2_CHUNKS = AV_CODEC_FLAG2_CHUNKS;
        public static int CODEC_FLAG2_DROP_FRAME_TIMECODE = AV_CODEC_FLAG2_DROP_FRAME_TIMECODE;
        public static int CODEC_FLAG2_EXPORT_MVS = AV_CODEC_FLAG2_EXPORT_MVS;
        public static int CODEC_FLAG2_FAST = AV_CODEC_FLAG2_FAST;
        public static int CODEC_FLAG2_IGNORE_CROP = AV_CODEC_FLAG2_IGNORE_CROP;
        public static int CODEC_FLAG2_LOCAL_HEADER = AV_CODEC_FLAG2_LOCAL_HEADER;
        public static int CODEC_FLAG2_NO_OUTPUT = AV_CODEC_FLAG2_NO_OUTPUT;
        public static int CODEC_FLAG2_SHOW_ALL = AV_CODEC_FLAG2_SHOW_ALL;
        public static int CODEC_FLAG2_SKIP_MANUAL = AV_CODEC_FLAG2_SKIP_MANUAL;
        public static bool FF_API_AC_VLC = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_AFD = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_ARCH_ALPHA = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_ARCH_SH4 = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_ARCH_SPARC = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_ASPECT_EXTENDED = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_ASS_TIMING = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_AUDIO_CONVERT = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_AUDIOENC_DELAY = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_AVCODEC_RESAMPLE = FF_API_AUDIO_CONVERT;
        public static bool FF_API_AVCTX_TIMEBASE = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_AVFILTER_INIT_FILTER = LIBAVFILTER_VERSION_MAJOR < 7;
        public static bool FF_API_AVFILTER_OPEN = LIBAVFILTER_VERSION_MAJOR < 7;
        public static bool FF_API_AVPACKET_OLD_API = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_AVPICTURE = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_BUFS_VDPAU = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_CAP_VDPAU = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_CODEC_NAME = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_CODED_FRAME = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_CODER_TYPE = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_COMPUTE_PKT_FIELDS2 = LIBAVFORMAT_VERSION_MAJOR < 58;
        public static bool FF_API_CONVERGENCE_DURATION = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_COPY_CONTEXT = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_CRC_BIG_TABLE = LIBAVUTIL_VERSION_MAJOR < 56;
        public static bool FF_API_DEBUG_MV = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_DLOG = LIBAVUTIL_VERSION_MAJOR < 56;
        public static bool FF_API_EMU_EDGE = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_ERROR_FRAME = LIBAVUTIL_VERSION_MAJOR < 56;
        public static bool FF_API_ERROR_RATE = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_FRAME_QP = LIBAVUTIL_VERSION_MAJOR < 56;
        public static bool FF_API_GET_CONTEXT_DEFAULTS = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_GETCHROMA = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_GMC = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_HLS_WRAP = LIBAVFORMAT_VERSION_MAJOR < 58;
        public static bool FF_API_HTTP_USER_AGENT = LIBAVFORMAT_VERSION_MAJOR < 58;
        public static bool FF_API_IDCT_XVIDMMX = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_INPUT_PRESERVED = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_LAVF_AVCTX = LIBAVFORMAT_VERSION_MAJOR < 58;
        public static bool FF_API_LAVF_BITEXACT = LIBAVFORMAT_VERSION_MAJOR < 58;
        public static bool FF_API_LAVF_CODEC_TB = LIBAVFORMAT_VERSION_MAJOR < 58;
        public static bool FF_API_LAVF_FMT_RAWPICTURE = LIBAVFORMAT_VERSION_MAJOR < 58;
        public static bool FF_API_LAVF_FRAC = LIBAVFORMAT_VERSION_MAJOR < 58;
        public static bool FF_API_LAVF_KEEPSIDE_FLAG = LIBAVFORMAT_VERSION_MAJOR < 58;
        public static bool FF_API_LAVF_MERGE_SD = LIBAVFORMAT_VERSION_MAJOR < 58;
        public static bool FF_API_LAVR_OPTS = LIBAVFILTER_VERSION_MAJOR < 7;
        public static bool FF_API_LOWRES = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_MAX_BFRAMES = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_MB_TYPE = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_MERGE_SD = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_MERGE_SD_API = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_MISSING_SAMPLE = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_MOTION_EST = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_MPV_OPT = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_MV0 = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_NEG_LINESIZES = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_NOCONST_GET_NAME = LIBAVFILTER_VERSION_MAJOR < 7;
        public static bool FF_API_NOCONST_GET_SIDE_DATA = LIBAVFORMAT_VERSION_MAJOR < 58;
        public static bool FF_API_NORMALIZE_AQP = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_NVENC_OLD_NAME = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_OLD_BSF = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_OLD_FILTER_OPTS = LIBAVFILTER_VERSION_MAJOR < 7;
        public static bool FF_API_OLD_FILTER_OPTS_ERROR = LIBAVFILTER_VERSION_MAJOR < 7;
        public static bool FF_API_OLD_FILTER_REGISTER = LIBAVFILTER_VERSION_MAJOR < 7;
        public static bool FF_API_OLD_MSMPEG4 = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_OLD_OPEN_CALLBACKS = LIBAVFORMAT_VERSION_MAJOR < 58;
        public static bool FF_API_OLD_ROTATE_API = LIBAVFORMAT_VERSION_MAJOR < 58;
        public static bool FF_API_OPT_TYPE_METADATA = LIBAVUTIL_VERSION_MAJOR < 56;
        public static bool FF_API_PKT_PTS = LIBAVUTIL_VERSION_MAJOR < 56;
        public static bool FF_API_PLUS1_MINUS1 = LIBAVUTIL_VERSION_MAJOR < 56;
        public static bool FF_API_PRIVATE_OPT = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_QP_TYPE = LIBPOSTPROC_VERSION_MAJOR < 55;
        public static bool FF_API_QSCALE_TYPE = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_QUANT_BIAS = LIBAVCODEC_VERSION_MAJOR < 59;
        public const int FF_API_R_FRAME_RATE = 1;
        public static bool FF_API_RC_STRATEGY = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_RTP_CALLBACK = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_SET_DIMENSIONS = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_SIDEDATA_ONLY_PKT = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_STAT_BITS = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_STREAM_CODEC_TAG = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_STRUCT_VAAPI_CONTEXT = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_SWS_VECTOR = LIBSWSCALE_VERSION_MAJOR < 6;
        public static bool FF_API_TAG_STRING = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_UNUSED_MEMBERS = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_URL_FEOF = LIBAVFORMAT_VERSION_MAJOR < 58;
        public static bool FF_API_VAAPI = LIBAVUTIL_VERSION_MAJOR < 56;
        public static bool FF_API_VAAPI_CONTEXT = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_VBV_DELAY = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_VDPAU = LIBAVUTIL_VERSION_MAJOR < 56;
        public static bool FF_API_VDPAU_PROFILE = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_VIMA_DECODER = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_VISMV = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_VOXWARE = LIBAVCODEC_VERSION_MAJOR < 58;
        public static bool FF_API_WITHOUT_PREFIX = LIBAVCODEC_VERSION_MAJOR < 59;
        public static bool FF_API_XVMC = LIBAVUTIL_VERSION_MAJOR < 56;
        public const int FF_ASPECT_EXTENDED = 15;
        public const int FF_BUG_AC_VLC = 0;
        public const int FF_BUG_AMV = 32;
        public const int FF_BUG_AUTODETECT = 1;
        public const int FF_BUG_DC_CLIP = 4096;
        public const int FF_BUG_DIRECT_BLOCKSIZE = 512;
        public const int FF_BUG_EDGE = 1024;
        public const int FF_BUG_HPEL_CHROMA = 2048;
        public const int FF_BUG_IEDGE = 32768;
        public const int FF_BUG_MS = 8192;
        public const int FF_BUG_NO_PADDING = 16;
        public const int FF_BUG_OLD_MSMPEG4 = 2;
        public const int FF_BUG_QPEL_CHROMA = 64;
        public const int FF_BUG_QPEL_CHROMA2 = 256;
        public const int FF_BUG_STD_QPEL = 128;
        public const int FF_BUG_TRUNCATED = 16384;
        public const int FF_BUG_UMP4 = 8;
        public const int FF_BUG_XVID_ILACE = 4;
        // public static  FF_CEIL_RSHIFT = AV_CEIL_RSHIFT;
        public const int FF_CMP_BIT = 5;
        public const int FF_CMP_CHROMA = 256;
        public const int FF_CMP_DCT = 3;
        public const int FF_CMP_DCT264 = 14;
        public const int FF_CMP_DCTMAX = 13;
        public const int FF_CMP_MEDIAN_SAD = 15;
        public const int FF_CMP_NSSE = 10;
        public const int FF_CMP_PSNR = 4;
        public const int FF_CMP_RD = 6;
        public const int FF_CMP_SAD = 0;
        public const int FF_CMP_SATD = 2;
        public const int FF_CMP_SSE = 1;
        public const int FF_CMP_VSAD = 8;
        public const int FF_CMP_VSSE = 9;
        public const int FF_CMP_W53 = 11;
        public const int FF_CMP_W97 = 12;
        public const int FF_CMP_ZERO = 7;
        public static int FF_CODEC_PROPERTY_CLOSED_CAPTIONS = 0x00000002;
        public static int FF_CODEC_PROPERTY_LOSSLESS = 0x00000001;
        public const int FF_CODER_TYPE_AC = 1;
        public const int FF_CODER_TYPE_DEFLATE = 4;
        public const int FF_CODER_TYPE_RAW = 2;
        public const int FF_CODER_TYPE_RLE = 3;
        public const int FF_CODER_TYPE_VLC = 0;
        public const int FF_COMPLIANCE_EXPERIMENTAL = -2;
        public const int FF_COMPLIANCE_NORMAL = 0;
        public const int FF_COMPLIANCE_STRICT = 1;
        public const int FF_COMPLIANCE_UNOFFICIAL = -1;
        public const int FF_COMPLIANCE_VERY_STRICT = 2;
        public const int FF_COMPRESSION_DEFAULT = -1;
        public const int FF_DCT_ALTIVEC = 5;
        public const int FF_DCT_AUTO = 0;
        public const int FF_DCT_FAAN = 6;
        public const int FF_DCT_FASTINT = 1;
        public const int FF_DCT_INT = 2;
        public const int FF_DCT_MMX = 3;
        public const int FF_DEBUG_BITSTREAM = 4;
        public static int FF_DEBUG_BUFFERS = 0x00008000;
        public static int FF_DEBUG_BUGS = 0x00001000;
        public static int FF_DEBUG_DCT_COEFF = 0x00000040;
        public static int FF_DEBUG_ER = 0x00000400;
        public static int FF_DEBUG_GREEN_MD = 0x00800000;
        public const int FF_DEBUG_MB_TYPE = 8;
        public static int FF_DEBUG_MMCO = 0x00000800;
        public const int FF_DEBUG_MV = 32;
        public static int FF_DEBUG_NOMC = 0x01000000;
        public const int FF_DEBUG_PICT_INFO = 1;
        public static int FF_DEBUG_PTS = 0x00000200;
        public const int FF_DEBUG_QP = 16;
        public const int FF_DEBUG_RC = 2;
        public static int FF_DEBUG_SKIP = 0x00000080;
        public static int FF_DEBUG_STARTCODE = 0x00000100;
        public static int FF_DEBUG_THREADS = 0x00010000;
        public static int FF_DEBUG_VIS_MB_TYPE = 0x00004000;
        public static int FF_DEBUG_VIS_MV_B_BACK = 0x00000004;
        public static int FF_DEBUG_VIS_MV_B_FOR = 0x00000002;
        public static int FF_DEBUG_VIS_MV_P_FOR = 0x00000001;
        public static int FF_DEBUG_VIS_QP = 0x00002000;
        public const int FF_DECODE_ERROR_INVALID_BITSTREAM = 1;
        public const int FF_DECODE_ERROR_MISSING_REFERENCE = 2;
        public const int FF_DEFAULT_QUANT_BIAS = 999999;
        public const int FF_DTG_AFD_14_9 = 11;
        public const int FF_DTG_AFD_16_9 = 10;
        public const int FF_DTG_AFD_16_9_SP_14_9 = 14;
        public const int FF_DTG_AFD_4_3 = 9;
        public const int FF_DTG_AFD_4_3_SP_14_9 = 13;
        public const int FF_DTG_AFD_SAME = 8;
        public const int FF_DTG_AFD_SP_4_3 = 15;
        public const int FF_DXVA2_WORKAROUND_INTEL_CLEARVIDEO = 2;
        public const int FF_DXVA2_WORKAROUND_SCALING_LIST_ZIGZAG = 1;
        public const int FF_EC_DEBLOCK = 2;
        public const int FF_EC_FAVOR_INTER = 256;
        public const int FF_EC_GUESS_MVS = 1;
        public static int FF_FDEBUG_TS = 0x0001;
        public const int FF_IDCT_ALTIVEC = 8;
        public const int FF_IDCT_ARM = 7;
        public const int FF_IDCT_AUTO = 0;
        public const int FF_IDCT_FAAN = 20;
        public const int FF_IDCT_INT = 1;
        public const int FF_IDCT_IPP = 13;
        public const int FF_IDCT_SH4 = 9;
        public const int FF_IDCT_SIMPLE = 2;
        public const int FF_IDCT_SIMPLEALPHA = 23;
        public const int FF_IDCT_SIMPLEARM = 10;
        public const int FF_IDCT_SIMPLEARMV5TE = 16;
        public const int FF_IDCT_SIMPLEARMV6 = 17;
        public const int FF_IDCT_SIMPLEAUTO = 128;
        public const int FF_IDCT_SIMPLEMMX = 3;
        public const int FF_IDCT_SIMPLENEON = 22;
        public const int FF_IDCT_SIMPLEVIS = 18;
        public const int FF_IDCT_XVID = 14;
        public const int FF_IDCT_XVIDMMX = 14;
        public const int FF_INPUT_BUFFER_PADDING_SIZE = 32;
        public const int FF_LAMBDA_MAX = 256 * 128;
        public static int FF_LAMBDA_SCALE = 1 << FF_LAMBDA_SHIFT;
        public const int FF_LAMBDA_SHIFT = 7;
        public const int FF_LEVEL_UNKNOWN = -99;
        public static int FF_LOSS_ALPHA = 0x0008;
        public static int FF_LOSS_CHROMA = 0x0020;
        public static int FF_LOSS_COLORQUANT = 0x0010;
        public static int FF_LOSS_COLORSPACE = 0x0004;
        public static int FF_LOSS_DEPTH = 0x0002;
        public static int FF_LOSS_RESOLUTION = 0x0001;
        public const int FF_MAX_B_FRAMES = 16;
        public const int FF_MB_DECISION_BITS = 1;
        public const int FF_MB_DECISION_RD = 2;
        public const int FF_MB_DECISION_SIMPLE = 0;
        public const int FF_MIN_BUFFER_SIZE = 16384;
        public const int FF_PRED_LEFT = 0;
        public const int FF_PRED_MEDIAN = 2;
        public const int FF_PRED_PLANE = 1;
        public const int FF_PROFILE_AAC_ELD = 38;
        public const int FF_PROFILE_AAC_HE = 4;
        public const int FF_PROFILE_AAC_HE_V2 = 28;
        public const int FF_PROFILE_AAC_LD = 22;
        public const int FF_PROFILE_AAC_LOW = 1;
        public const int FF_PROFILE_AAC_LTP = 3;
        public const int FF_PROFILE_AAC_MAIN = 0;
        public const int FF_PROFILE_AAC_SSR = 2;
        public const int FF_PROFILE_DNXHD = 0;
        public const int FF_PROFILE_DNXHR_444 = 5;
        public const int FF_PROFILE_DNXHR_HQ = 3;
        public const int FF_PROFILE_DNXHR_HQX = 4;
        public const int FF_PROFILE_DNXHR_LB = 1;
        public const int FF_PROFILE_DNXHR_SQ = 2;
        public const int FF_PROFILE_DTS = 20;
        public const int FF_PROFILE_DTS_96_24 = 40;
        public const int FF_PROFILE_DTS_ES = 30;
        public const int FF_PROFILE_DTS_EXPRESS = 70;
        public const int FF_PROFILE_DTS_HD_HRA = 50;
        public const int FF_PROFILE_DTS_HD_MA = 60;
        public const int FF_PROFILE_H264_BASELINE = 66;
        public const int FF_PROFILE_H264_CAVLC_444 = 44;
        public const int FF_PROFILE_H264_CONSTRAINED = 1 << 9;
        public static int FF_PROFILE_H264_CONSTRAINED_BASELINE = 66 | FF_PROFILE_H264_CONSTRAINED;
        public const int FF_PROFILE_H264_EXTENDED = 88;
        public const int FF_PROFILE_H264_HIGH = 100;
        public const int FF_PROFILE_H264_HIGH_10 = 110;
        public static int FF_PROFILE_H264_HIGH_10_INTRA = 110 | FF_PROFILE_H264_INTRA;
        public const int FF_PROFILE_H264_HIGH_422 = 122;
        public static int FF_PROFILE_H264_HIGH_422_INTRA = 122 | FF_PROFILE_H264_INTRA;
        public const int FF_PROFILE_H264_HIGH_444 = 144;
        public static int FF_PROFILE_H264_HIGH_444_INTRA = 244 | FF_PROFILE_H264_INTRA;
        public const int FF_PROFILE_H264_HIGH_444_PREDICTIVE = 244;
        public const int FF_PROFILE_H264_INTRA = 1 << 11;
        public const int FF_PROFILE_H264_MAIN = 77;
        public const int FF_PROFILE_H264_MULTIVIEW_HIGH = 118;
        public const int FF_PROFILE_H264_STEREO_HIGH = 128;
        public const int FF_PROFILE_HEVC_MAIN = 1;
        public const int FF_PROFILE_HEVC_MAIN_10 = 2;
        public const int FF_PROFILE_HEVC_MAIN_STILL_PICTURE = 3;
        public const int FF_PROFILE_HEVC_REXT = 4;
        public const int FF_PROFILE_JPEG2000_CSTREAM_NO_RESTRICTION = 32768;
        public const int FF_PROFILE_JPEG2000_CSTREAM_RESTRICTION_0 = 1;
        public const int FF_PROFILE_JPEG2000_CSTREAM_RESTRICTION_1 = 2;
        public const int FF_PROFILE_JPEG2000_DCINEMA_2K = 3;
        public const int FF_PROFILE_JPEG2000_DCINEMA_4K = 4;
        public const int FF_PROFILE_MPEG2_422 = 0;
        public const int FF_PROFILE_MPEG2_AAC_HE = 131;
        public const int FF_PROFILE_MPEG2_AAC_LOW = 128;
        public const int FF_PROFILE_MPEG2_HIGH = 1;
        public const int FF_PROFILE_MPEG2_MAIN = 4;
        public const int FF_PROFILE_MPEG2_SIMPLE = 5;
        public const int FF_PROFILE_MPEG2_SNR_SCALABLE = 3;
        public const int FF_PROFILE_MPEG2_SS = 2;
        public const int FF_PROFILE_MPEG4_ADVANCED_CODING = 11;
        public const int FF_PROFILE_MPEG4_ADVANCED_CORE = 12;
        public const int FF_PROFILE_MPEG4_ADVANCED_REAL_TIME = 9;
        public const int FF_PROFILE_MPEG4_ADVANCED_SCALABLE_TEXTURE = 13;
        public const int FF_PROFILE_MPEG4_ADVANCED_SIMPLE = 15;
        public const int FF_PROFILE_MPEG4_BASIC_ANIMATED_TEXTURE = 7;
        public const int FF_PROFILE_MPEG4_CORE = 2;
        public const int FF_PROFILE_MPEG4_CORE_SCALABLE = 10;
        public const int FF_PROFILE_MPEG4_HYBRID = 8;
        public const int FF_PROFILE_MPEG4_MAIN = 3;
        public const int FF_PROFILE_MPEG4_N_BIT = 4;
        public const int FF_PROFILE_MPEG4_SCALABLE_TEXTURE = 5;
        public const int FF_PROFILE_MPEG4_SIMPLE = 0;
        public const int FF_PROFILE_MPEG4_SIMPLE_FACE_ANIMATION = 6;
        public const int FF_PROFILE_MPEG4_SIMPLE_SCALABLE = 1;
        public const int FF_PROFILE_MPEG4_SIMPLE_STUDIO = 14;
        public const int FF_PROFILE_RESERVED = -100;
        public const int FF_PROFILE_UNKNOWN = -99;
        public const int FF_PROFILE_VC1_ADVANCED = 3;
        public const int FF_PROFILE_VC1_COMPLEX = 2;
        public const int FF_PROFILE_VC1_MAIN = 1;
        public const int FF_PROFILE_VC1_SIMPLE = 0;
        public const int FF_PROFILE_VP9_0 = 0;
        public const int FF_PROFILE_VP9_1 = 1;
        public const int FF_PROFILE_VP9_2 = 2;
        public const int FF_PROFILE_VP9_3 = 3;
        public const int FF_QP2LAMBDA = 118;
        public const int FF_QSCALE_TYPE_H264 = 2;
        public const int FF_QSCALE_TYPE_MPEG1 = 0;
        public const int FF_QSCALE_TYPE_MPEG2 = 1;
        public const int FF_QSCALE_TYPE_VP56 = 3;
        public static int FF_QUALITY_SCALE = FF_LAMBDA_SCALE;
        public const int FF_RC_STRATEGY_XVID = 1;
        public const int FF_SUB_CHARENC_MODE_AUTOMATIC = 0;
        public const int FF_SUB_CHARENC_MODE_DO_NOTHING = -1;
        public const int FF_SUB_CHARENC_MODE_PRE_DECODER = 1;
        public const int FF_SUB_TEXT_FMT_ASS = 0;
        public const int FF_SUB_TEXT_FMT_ASS_WITH_TIMINGS = 1;
        public const int FF_THREAD_FRAME = 1;
        public const int FF_THREAD_SLICE = 2;
        public static int HWACCEL_CODEC_CAP_EXPERIMENTAL = 0x0200;
        // public static  LIBAVCODEC_BUILD = LIBAVCODEC_VERSION_INT;
        // public static  LIBAVCODEC_IDENT = "Lavc" AV_STRINGIFY(LIBAVCODEC_VERSION);
        // public static  LIBAVCODEC_VERSION = AV_VERSION(LIBAVCODEC_VERSION_MAJOR,    LIBAVCODEC_VERSION_MINOR,    LIBAVCODEC_VERSION_MICRO);
        // public static  LIBAVCODEC_VERSION_INT = AV_VERSION_INT(LIBAVCODEC_VERSION_MAJOR, LIBAVCODEC_VERSION_MINOR, LIBAVCODEC_VERSION_MICRO);
        public const int LIBAVCODEC_VERSION_MAJOR = 57;
        public const int LIBAVCODEC_VERSION_MICRO = 100;
        public const int LIBAVCODEC_VERSION_MINOR = 89;
        // public static  LIBAVDEVICE_BUILD = LIBAVDEVICE_VERSION_INT;
        // public static  LIBAVDEVICE_IDENT = "Lavd" AV_STRINGIFY(LIBAVDEVICE_VERSION);
        // public static  LIBAVDEVICE_VERSION = AV_VERSION(LIBAVDEVICE_VERSION_MAJOR, LIBAVDEVICE_VERSION_MINOR, LIBAVDEVICE_VERSION_MICRO);
        // public static  LIBAVDEVICE_VERSION_INT = AV_VERSION_INT(LIBAVDEVICE_VERSION_MAJOR, LIBAVDEVICE_VERSION_MINOR, LIBAVDEVICE_VERSION_MICRO);
        public const int LIBAVDEVICE_VERSION_MAJOR = 57;
        public const int LIBAVDEVICE_VERSION_MICRO = 100;
        public const int LIBAVDEVICE_VERSION_MINOR = 6;
        // public static  LIBAVFILTER_BUILD = LIBAVFILTER_VERSION_INT;
        // public static  LIBAVFILTER_IDENT = "Lavfi" AV_STRINGIFY(LIBAVFILTER_VERSION);
        // public static  LIBAVFILTER_VERSION = AV_VERSION(LIBAVFILTER_VERSION_MAJOR,   LIBAVFILTER_VERSION_MINOR,   LIBAVFILTER_VERSION_MICRO);
        // public static  LIBAVFILTER_VERSION_INT = AV_VERSION_INT(LIBAVFILTER_VERSION_MAJOR, LIBAVFILTER_VERSION_MINOR, LIBAVFILTER_VERSION_MICRO);
        public const int LIBAVFILTER_VERSION_MAJOR = 6;
        public const int LIBAVFILTER_VERSION_MICRO = 100;
        public const int LIBAVFILTER_VERSION_MINOR = 82;
        // public static  LIBAVFORMAT_BUILD = LIBAVFORMAT_VERSION_INT;
        // public static  LIBAVFORMAT_IDENT = "Lavf" AV_STRINGIFY(LIBAVFORMAT_VERSION);
        // public static  LIBAVFORMAT_VERSION = AV_VERSION(LIBAVFORMAT_VERSION_MAJOR,   LIBAVFORMAT_VERSION_MINOR,   LIBAVFORMAT_VERSION_MICRO);
        // public static  LIBAVFORMAT_VERSION_INT = AV_VERSION_INT(LIBAVFORMAT_VERSION_MAJOR, LIBAVFORMAT_VERSION_MINOR, LIBAVFORMAT_VERSION_MICRO);
        public const int LIBAVFORMAT_VERSION_MAJOR = 57;
        public const int LIBAVFORMAT_VERSION_MICRO = 100;
        public const int LIBAVFORMAT_VERSION_MINOR = 71;
        // public static  LIBAVUTIL_BUILD = LIBAVUTIL_VERSION_INT;
        // public static  LIBAVUTIL_IDENT = "Lavu" AV_STRINGIFY(LIBAVUTIL_VERSION);
        // public static  LIBAVUTIL_VERSION = AV_VERSION(LIBAVUTIL_VERSION_MAJOR,     LIBAVUTIL_VERSION_MINOR,     LIBAVUTIL_VERSION_MICRO);
        // public static  LIBAVUTIL_VERSION_INT = AV_VERSION_INT(LIBAVUTIL_VERSION_MAJOR, LIBAVUTIL_VERSION_MINOR, LIBAVUTIL_VERSION_MICRO);
        public const int LIBAVUTIL_VERSION_MAJOR = 55;
        public const int LIBAVUTIL_VERSION_MICRO = 100;
        public const int LIBAVUTIL_VERSION_MINOR = 58;
        // public static  LIBPOSTPROC_BUILD = LIBPOSTPROC_VERSION_INT;
        // public static  LIBPOSTPROC_IDENT = "postproc" AV_STRINGIFY(LIBPOSTPROC_VERSION);
        // public static  LIBPOSTPROC_VERSION = AV_VERSION(LIBPOSTPROC_VERSION_MAJOR, LIBPOSTPROC_VERSION_MINOR, LIBPOSTPROC_VERSION_MICRO);
        // public static  LIBPOSTPROC_VERSION_INT = AV_VERSION_INT(LIBPOSTPROC_VERSION_MAJOR, LIBPOSTPROC_VERSION_MINOR, LIBPOSTPROC_VERSION_MICRO);
        public const int LIBPOSTPROC_VERSION_MAJOR = 54;
        public const int LIBPOSTPROC_VERSION_MICRO = 100;
        public const int LIBPOSTPROC_VERSION_MINOR = 5;
        // public static  LIBSWRESAMPLE_BUILD = LIBSWRESAMPLE_VERSION_INT;
        // public static  LIBSWRESAMPLE_IDENT = "SwR" AV_STRINGIFY(LIBSWRESAMPLE_VERSION);
        // public static  LIBSWRESAMPLE_VERSION = AV_VERSION(LIBSWRESAMPLE_VERSION_MAJOR, LIBSWRESAMPLE_VERSION_MINOR, LIBSWRESAMPLE_VERSION_MICRO);
        // public static  LIBSWRESAMPLE_VERSION_INT = AV_VERSION_INT(LIBSWRESAMPLE_VERSION_MAJOR, LIBSWRESAMPLE_VERSION_MINOR, LIBSWRESAMPLE_VERSION_MICRO);
        public const int LIBSWRESAMPLE_VERSION_MAJOR = 2;
        public const int LIBSWRESAMPLE_VERSION_MICRO = 100;
        public const int LIBSWRESAMPLE_VERSION_MINOR = 7;
        // public static  LIBSWSCALE_BUILD = LIBSWSCALE_VERSION_INT;
        // public static  LIBSWSCALE_IDENT = "SwS" AV_STRINGIFY(LIBSWSCALE_VERSION);
        // public static  LIBSWSCALE_VERSION = AV_VERSION(LIBSWSCALE_VERSION_MAJOR, LIBSWSCALE_VERSION_MINOR, LIBSWSCALE_VERSION_MICRO);
        // public static  LIBSWSCALE_VERSION_INT = AV_VERSION_INT(LIBSWSCALE_VERSION_MAJOR, LIBSWSCALE_VERSION_MINOR, LIBSWSCALE_VERSION_MICRO);
        public const int LIBSWSCALE_VERSION_MAJOR = 4;
        public const int LIBSWSCALE_VERSION_MICRO = 100;
        public const int LIBSWSCALE_VERSION_MINOR = 6;
        public static float M_E = 2.7182818284590452354f;
        public static float M_LN10 = 2.30258509299404568402f;
        public static float M_LN2 = 0.69314718055994530942f;
        public static float M_LOG2_10 = 3.32192809488736234787f;
        public static float M_PHI = 1.61803398874989484820f;
        public static float M_PI = 3.14159265358979323846f;
        public static float M_PI_2 = 1.57079632679489661923f;
        public static float M_SQRT1_2 = 0.70710678118654752440f;
        public static float M_SQRT2 = 1.41421356237309504880f;
        public const int MAX_REORDER_DELAY = 16;
        public const int MAX_STD_TIMEBASES = 30 * 12;
        public static int MB_TYPE_16x16 = 0x0008;
        public static int MB_TYPE_16x8 = 0x0010;
        public static int MB_TYPE_8x16 = 0x0020;
        public static int MB_TYPE_8x8 = 0x0040;
        public static int MB_TYPE_ACPRED = 0x0200;
        public static int MB_TYPE_CBP = 0x00020000;
        public static int MB_TYPE_DIRECT2 = 0x0100;
        public static int MB_TYPE_GMC = 0x0400;
        public static int MB_TYPE_INTERLACED = 0x0080;
        public static int MB_TYPE_INTRA_PCM = 0x0004;
        public static int MB_TYPE_INTRA16x16 = 0x0002;
        public static int MB_TYPE_INTRA4x4 = 0x0001;
        public static int MB_TYPE_L0 = MB_TYPE_P0L0 | MB_TYPE_P1L0;
        public static int MB_TYPE_L0L1 = MB_TYPE_L0 | MB_TYPE_L1;
        public static int MB_TYPE_L1 = MB_TYPE_P0L1 | MB_TYPE_P1L1;
        public static int MB_TYPE_P0L0 = 0x1000;
        public static int MB_TYPE_P0L1 = 0x4000;
        public static int MB_TYPE_P1L0 = 0x2000;
        public static int MB_TYPE_P1L1 = 0x8000;
        public static int MB_TYPE_QUANT = 0x00010000;
        public static int MB_TYPE_SKIP = 0x0800;
        public static int PARSER_FLAG_COMPLETE_FRAMES = 0x0001;
        public static int PARSER_FLAG_FETCHED_OFFSET = 0x0004;
        public static int PARSER_FLAG_ONCE = 0x0002;
        public static int PARSER_FLAG_USE_CODEC_TS = 0x1000;
        public static int PP_CPU_CAPS_3DNOW = 0x40000000;
        public static int PP_CPU_CAPS_ALTIVEC = 0x10000000;
        public static int PP_CPU_CAPS_AUTO = 0x00080000;
        public static long PP_CPU_CAPS_MMX = 0x80000000;
        public static int PP_CPU_CAPS_MMX2 = 0x20000000;
        public static int PP_FORMAT = 0x00000008;
        public static int PP_FORMAT_411 = 0x00000002 | PP_FORMAT;
        public static int PP_FORMAT_420 = 0x00000011 | PP_FORMAT;
        public static int PP_FORMAT_422 = 0x00000001 | PP_FORMAT;
        public static int PP_FORMAT_440 = 0x00000010 | PP_FORMAT;
        public static int PP_FORMAT_444 = 0x00000000 | PP_FORMAT;
        public static int PP_PICT_TYPE_QP2 = 0x00000010;
        public const int PP_QUALITY_MAX = 6;
        // public static  QP_STORE_T = int8_t;
        public static int SLICE_FLAG_ALLOW_FIELD = 0x0002;
        public static int SLICE_FLAG_ALLOW_PLANE = 0x0004;
        public static int SLICE_FLAG_CODED_ORDER = 0x0001;
        public const int SWR_FLAG_RESAMPLE = 1;
        public static int SWS_ACCURATE_RND = 0x40000;
        public static int SWS_AREA = 0x20;
        public const int SWS_BICUBIC = 4;
        public static int SWS_BICUBLIN = 0x40;
        public const int SWS_BILINEAR = 2;
        public static int SWS_BITEXACT = 0x80000;
        public const int SWS_CS_BT2020 = 9;
        public const int SWS_CS_DEFAULT = 5;
        public const int SWS_CS_FCC = 4;
        public const int SWS_CS_ITU601 = 5;
        public const int SWS_CS_ITU624 = 5;
        public const int SWS_CS_ITU709 = 1;
        public const int SWS_CS_SMPTE170M = 5;
        public const int SWS_CS_SMPTE240M = 7;
        public static int SWS_DIRECT_BGR = 0x8000;
        public static int SWS_ERROR_DIFFUSION = 0x800000;
        public const int SWS_FAST_BILINEAR = 1;
        public static int SWS_FULL_CHR_H_INP = 0x4000;
        public static int SWS_FULL_CHR_H_INT = 0x2000;
        public static int SWS_GAUSS = 0x80;
        public static int SWS_LANCZOS = 0x200;
        public static float SWS_MAX_REDUCE_CUTOFF = 0.002f;
        public const int SWS_PARAM_DEFAULT = 123456;
        public static int SWS_POINT = 0x10;
        public static int SWS_PRINT_INFO = 0x1000;
        public static int SWS_SINC = 0x100;
        public static int SWS_SPLINE = 0x400;
        public static int SWS_SRC_V_CHR_DROP_MASK = 0x30000;
        public const int SWS_SRC_V_CHR_DROP_SHIFT = 16;
        public const int SWS_X = 8;
    }
}
